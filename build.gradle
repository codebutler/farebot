buildscript {
    repositories { 
      maven { url 'http://repo1.maven.org/maven2' } 
      maven { url 'http://download.crashlytics.com/maven' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.9.+'
        classpath 'com.crashlytics.tools.gradle:crashlytics-gradle:1.0.+'
    }
}

apply plugin: 'android'
apply plugin: 'crashlytics'

repositories {
    mavenCentral()
    maven { url 'http://download.crashlytics.com/maven' }
    maven { url 'libs' }
}

dependencies {
    compile 'com.android.support:support-v4:13.0.0'
    compile 'com.google.android.gms:play-services:3.1.36'
    compile 'com.actionbarsherlock:actionbarsherlock:4.3.2-SNAPSHOT'
    compile 'com.crashlytics.android:crashlytics:1.0.+'
    compile 'org.apache.commons:commons-io:1.3.2'
    compile 'org.apache.commons:commons-lang3:3.1'
    compile files('libs/nfc-felica.jar')
}

def password = null

def askPassword() {
  return 'security -q find-generic-password -g -l farebot-release'.execute().err.text.split('"')[1]
}

afterEvaluate {
    validateReleaseSigning.doFirst {
        password = askPassword()
        signingConfig.storePassword = password
        signingConfig.keyPassword = password
    }
}

android {
    compileSdkVersion 17
    buildToolsVersion "19.0.0"

    defaultConfig {
        minSdkVersion 10
        targetSdkVersion 17
    }

    signingConfigs {
        debug {
            storeFile file('debug.keystore')
        }
        release {
            storeFile file('release.keystore')
            keyAlias 'ericbutler'
            storePassword ''
            keyPassword ''
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }
}

tasks.withType(Compile) {
    options.encoding = "UTF-8"
}
