buildscript {
    repositories {
        jcenter()
        maven { url 'http://download.crashlytics.com/maven' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.13.2'
        classpath 'com.crashlytics.tools.gradle:crashlytics-gradle:1.+'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'crashlytics'

repositories {
    jcenter()
    maven { url 'http://download.crashlytics.com/maven' }
}

dependencies {
    compile 'com.android.support:support-v4:20.0.0'
    compile 'com.google.android.gms:play-services:5.2.08'
    compile 'com.crashlytics.android:crashlytics:1.+'
    compile 'org.apache.commons:commons-io:1.3.2'
    compile 'org.apache.commons:commons-lang3:3.1'
    compile('org.simpleframework:simple-xml:2.7.1') {
        exclude module: 'stax'
        exclude module: 'stax-api'
        exclude module: 'xpp3'
    }
    compile fileTree(dir: 'libs', include: '*.jar')
}

def password = null

def askPassword() {
    return 'security -q find-generic-password -g -l farebot-release'.execute().err.text.split('"')[1]
}

afterEvaluate {
    validateReleaseSigning.doFirst {
        password = askPassword()
        signingConfig.storePassword = password
        signingConfig.keyPassword = password
    }
}

android {
    compileSdkVersion 19
    buildToolsVersion "20.0.0"

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 19
    }

    signingConfigs {
        debug {
            storeFile file('debug.keystore')
        }
        release {
            storeFile file('release.keystore')
            keyAlias 'ericbutler'
            storePassword ''
            keyPassword ''
        }
    }

    buildTypes {
        dev.initWith(buildTypes.debug)
        dev {
            applicationIdSuffix '.dev'
        }
        release {
            signingConfig signingConfigs.release
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
}
