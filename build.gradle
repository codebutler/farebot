buildscript {
    repositories {
        jcenter()
        maven { url 'https://maven.fabric.io/public' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.2.1'
        classpath 'io.fabric.tools:gradle:1.21.6'
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'checkstyle'
apply plugin: 'com.neenbedankt.android-apt'

check.dependsOn 'checkstyle'

task checkstyle(type: Checkstyle) {
    source 'src'
    include '**/*.java'
    exclude '**/gen/**'
    classpath = files()
}

repositories {
    mavenCentral()
    mavenLocal()
    maven { url 'https://maven.fabric.io/public' }
}

dependencies {
    compile 'com.android.support:support-v4:24.2.1'
    compile 'com.google.android.gms:play-services-maps:9.0.1'
    compile('com.crashlytics.sdk.android:crashlytics:2.5.5@aar') {
        transitive = true
    }
    compile 'commons-io:commons-io:2.4'
    compile 'org.apache.commons:commons-lang3:3.4'
    compile 'com.google.code.gson:gson:2.7'
    compile project(':nfc-felica-lib')
    compile fileTree(dir: 'libs', include: '*.jar')

    compile 'com.ryanharter.auto.value:auto-value-gson:0.4.0'

    provided 'com.google.auto.value:auto-value:1.3-rc1'
    apt 'com.google.auto.value:auto-value:1.3-rc1'
    apt 'com.ryanharter.auto.value:auto-value-parcel:0.2.5'
    apt 'com.ryanharter.auto.value:auto-value-gson:0.4.0'
}

def askPassword() {
    return 'security -q find-generic-password -w -g -l farebot-release'.execute().text.trim()
}

gradle.taskGraph.whenReady { taskGraph ->
    if(taskGraph.hasTask(':assembleProdRelease')) {
        def password = askPassword()
        android.signingConfigs.release.storePassword = password
        android.signingConfigs.release.keyPassword = password
    }
}

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    productFlavors {
        dev {
            minSdkVersion 21
            applicationId "com.codebutler.farebot.dev"
        }
        prod {
            minSdkVersion 15
        }
    }

    defaultConfig {
        targetSdkVersion 23
    }

    signingConfigs {
        debug {
            storeFile file('debug.keystore')
        }
        release {
            storeFile file('release.keystore')
            keyAlias 'ericbutler'
            storePassword ''
            keyPassword ''
        }
    }

    buildTypes {
        release {
            // runProguard true
            signingConfig signingConfigs.release
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }

    lintOptions {
        abortOnError true
        disable 'MissingTranslation', 'InvalidPackage'
    }
}

checkstyle {
    ignoreFailures = false
    toolVersion = "6.17"
}
